AWSTemplateFormatVersion: "2010-09-09"

Description: tutorial-gateway-lambda-dynamodb

Resources:
  SampleWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: SampleWebSocketName
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SampleWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref ConnectIntegration
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SampleWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
  Type: AWS::ApiGatewayV2::Route
  Properties:
    ApiId: !Ref SampleWebSocket
    RouteKey: $disconenct
    AuthorizationType: NONE
    OperationName: DisconnectRoute
    Target: !Join 
      - '/'
      - - 'integrations'
        - !Ref DisconnectIntegration
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SampleWebSocket
      Description: Disconenct Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SendRount:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SampleWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendIntegration
  SendIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SampleWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
        arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  Deplotment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - SendRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref SampleWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref SampleWebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:  SampleWebSocketConnect_DB
      AttributeDefinitions:
      - AttributeName: "connectionId"
        AttributeType: "S"
      - AttributeName: "channelId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "connectionId"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
  SendMessageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SendMessage_DB 
      AttributeDefinitions:
      - AttributeName: "channelId"
        AttributeType: "S"
      - AttributeName: "onCartMenu"
        AttributeType: "M"
      KeySchema:
      - AttributeName: "channelId"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
  OnConnectFunction:
    Type: AWS:Serverless:Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs14.x
      Environment:
        Variables:
          TABLE_NAME: "SampleWebSocketConnect_DB"
      Policies:
      - DynamoDBCrudPolicy:
          TableName: "SampleWebSocketConnect_DB"
  OnDisconnectPermission:
  Type: AWS::Lambda::Permission
  DependsOn:
    - SampleWebSocket
  Properties:
    Action: lambda:InvokeFunction
    FunctionName: !Ref OnDisconnectFunction
    Principal: apigateway.amazonaws.com
  OnConnectFunction:
    Type: AWS:Serverless:Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs14.x
      Environment:
        Variables:
          TABLE_NAME: "SampleWebSocketConnect_DB"
      Policies:
      - DynamoDBCrudPolicy:
          TableName: "SampleWebSocketConnect_DB"
  OnDisconnectPermission:
  Type: AWS::Lambda::Permission
  DependsOn:
    - SampleWebSocket
  Properties:
    Action: lambda:InvokeFunction
    FunctionName: !Ref OnDisconnectFunction
    Principal: apigateway.amazonaws.com
  SendMessageFunction:
  Type: AWS::Lambda::Permission
  DependsOn:
    - SampleWebSocket
  Properties:
    Action: lambda:InvokeFunction
    FunctionName: !Ref OnDisconnectFunction
    Principal: apigateway.amazonaws.com